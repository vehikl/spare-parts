name: Test and build

on:
  pull_request:
    branches: [main]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test_flutter:
    name: Run Flutter tests
    uses: ./.github/workflows/flutter-setup.yml
    with:
      runs_on: ubuntu-latest
      final_command_name: Run tests
      final_command: flutter test
    secrets:
      GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      DART_FIREBASE_OPTIONS: ${{ secrets.DART_FIREBASE_OPTIONS }}

  build_android:
    name: Build Android App
    uses: ./.github/workflows/flutter-setup.yml
    with:
      runs_on: ubuntu-latest
      final_command_name: Build for Android
      final_command: flutter build apk
    secrets:
      GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      DART_FIREBASE_OPTIONS: ${{ secrets.DART_FIREBASE_OPTIONS }}

  build_web:
    name: Build Web App
    uses: ./.github/workflows/flutter-setup.yml
    with:
      runs_on: ubuntu-latest
      final_command_name: Build for web
      final_command: flutter build web
    secrets:
      GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      DART_FIREBASE_OPTIONS: ${{ secrets.DART_FIREBASE_OPTIONS }}

  build_functions:
    name: Build Firebase Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Chage directory
        run: cd functions

      - name: Install dependencies
        run: npm i

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  # TODO: set up provisioning profiles
  # build_ios:
  #   name: Build IOS App
  #   uses: ./.github/workflows/flutter-setup.yml
  #   with:
  #     runs_on: macos-latest
  #     final_command_name: Buid for IOS
  #     final_command: flutter build ios
  #   secrets:
  #     GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
  #     DART_FIREBASE_OPTIONS: ${{ secrets.DART_FIREBASE_OPTIONS }}
